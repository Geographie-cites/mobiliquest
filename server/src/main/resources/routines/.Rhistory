## CSP (INDIVIDUELLE)
nomIndic <- "cs"
nomVar <- "CSP"
if(!nomVar%in%names(subpop)){
data <- prepPVS(nomEnq, prez_long, nomIndic, nomVar, seuil)
createFiles(nomIndic, nomVar, nomEnq, data, prez_long, sfSec, cheminOut)
createISeg(nomIndic, nomVar, nomEnq, ctry, data, sfSec, cheminOut)
createStacked(nomIndic, nomEnq, ctry, data, cheminOut)    }
## CSP (MENAGE)
nomIndic <- "cspmen"
nomVar <- "CSPMEN"
if(!nomVar%in%names(subpop)){
data <- prepPVS(nomEnq, prez_long, nomIndic, nomVar, seuil)
createFiles(nomIndic, nomVar, nomEnq, data, prez_long, sfSec, cheminOut)
createISeg(nomIndic, nomVar, nomEnq, ctry, data, sfSec, cheminOut)
createStacked(nomIndic, nomEnq, ctry, data, cheminOut)    }
}
## ZONE DE RESIDENCE
if(ctry == "FR"){
nomIndic <- "resarea"
nomVar <- "ZONAGE"
if(!nomVar%in%names(subpop)){
data <- prepPVS(nomEnq, prez_long, nomIndic, nomVar, seuil)
createFiles(nomIndic, nomVar, nomEnq, data, prez_long, sfSec, cheminOut)
createISeg(nomIndic, nomVar, nomEnq, ctry, data, sfSec, cheminOut)
createStacked(nomIndic, nomEnq, ctry, data, cheminOut)    }
}
## QPV
if(ctry == "FR" & nomEnq != "ANNECY"){
nomIndic <- "qpv"
nomVar <- "QPV"
if(!nomVar%in%names(subpop)){
data <- prepPVS(nomEnq, prez_long, nomIndic, nomVar, seuil)
createFiles(nomIndic, nomVar, nomEnq, data, prez_long, sfSec, cheminOut)
createISeg(nomIndic, nomVar, nomEnq, ctry, data, sfSec, cheminOut)
createStacked(nomIndic, nomEnq, ctry, data, cheminOut)    }
}
# REVENU (MENAGE) - PARIS, CANADA et Amérique du Sud
if(nomEnq == "IDF" || ctry %in% c("CA", "AS")){
nomIndic <- "rev"
nomVar <- "REV"
if(!nomVar%in%names(subpop)){
data <- prepPVS(nomEnq, prez_long, nomIndic, nomVar, seuil)
createFiles(nomIndic, nomVar, nomEnq, data, prez_long, sfSec, cheminOut)
createISeg(nomIndic, nomVar, nomEnq, ctry, data, sfSec, cheminOut)
createStacked(nomIndic, nomEnq, ctry, data, cheminOut)    }
}
if(nomEnq == "IDF"){
# DEPARTEMENT DE RESIDENCE
nomIndic <- "dep"
nomVar <- "DEP"
if(!nomVar%in%names(subpop)){
data <- prepPVS(nomEnq, prez_long, nomIndic, nomVar, seuil)
createFiles(nomIndic, nomVar, nomEnq, data, prez_long, sfSec, cheminOut)
createISeg(nomIndic, nomVar, nomEnq, ctry, data, sfSec, cheminOut)
createStacked(nomIndic, nomEnq, ctry, data, cheminOut)    }
}
if(ctry=="AS"){
## 3o. CSO (des actifs)
nomIndic <- "cso"
nomVar <- "CSO"
if(!nomVar%in%names(subpop)){
data <- prepPVS(nomEnq, prez_long, nomIndic, nomVar, seuil)
createFiles(nomIndic, nomVar, nomEnq, data, prez_long, sfSec, cheminOut)
createISeg(nomIndic, nomVar, nomEnq, ctry, data, sfSec, cheminOut)
createStacked(nomIndic, nomEnq, ctry, data, cheminOut)    }
## COMPOSITION DU MENAGE
nomIndic <- "strm"
nomVar <- "STRM"
if(!nomVar%in%names(subpop)){
data <- prepPVS(nomEnq, prez_long, nomIndic, nomVar, seuil)
createFiles(nomIndic, nomVar, nomEnq, data, prez_long, sfSec, cheminOut)
createISeg(nomIndic, nomVar, nomEnq, ctry, data, sfSec, cheminOut)
createStacked(nomIndic, nomEnq, ctry, data, cheminOut)    }
## STATUT D'OCCUPATION DU LOGEMENT
nomIndic <- "log"
nomVar <- "LOG"
if(!nomVar%in%names(subpop)){
data <- prepPVS(nomEnq, prez_long, nomIndic, nomVar, seuil)
createFiles(nomIndic, nomVar, nomEnq, data, prez_long, sfSec, cheminOut)
createISeg(nomIndic, nomVar, nomEnq, ctry, data, sfSec, cheminOut)
createStacked(nomIndic, nomEnq, ctry, data, cheminOut)    }
}
## INFORMALITE (des actifs)
if(nomEnq %in% c("BOGOTA", "SAO PAULO")){
nomIndic <- "inf"
nomVar <- "INFORMAL"
if(!nomVar%in%names(subpop)){
data <- prepPVS(nomEnq, prez_long, nomIndic, nomVar, seuil)
createFiles(nomIndic, nomVar, nomEnq, data, prez_long, sfSec, cheminOut)
createISeg(nomIndic, nomVar, nomEnq, ctry, data, sfSec, cheminOut)
createStacked(nomIndic, nomEnq, ctry, data, cheminOut)    }
}
if(ctry=="AS"){
## ZONAGE METAL
nomIndic <- "zona"
nomVar <- "ZONAGE"
if(!nomVar%in%names(subpop)){
data <- prepPVS(nomEnq, prez_long, nomIndic, nomVar, seuil)
createFiles(nomIndic, nomVar, nomEnq, data, prez_long, sfSec, cheminOut)
createISeg(nomIndic, nomVar, nomEnq, ctry, data, sfSec, cheminOut)
createStacked(nomIndic, nomEnq, ctry, data, cheminOut)    }
}
if(nomEnq == "BOGOTA"){
## SSE
nomIndic <- "sse"
nomVar <- "RES_SSE"
if(!nomVar%in%names(subpop)){
data <- prepPVS(nomEnq, prez_long, nomIndic, nomVar, seuil)
createFiles(nomIndic, nomVar, nomEnq, data, prez_long, sfSec, cheminOut)
createISeg(nomIndic, nomVar, nomEnq, ctry, data, sfSec, cheminOut)
createStacked(nomIndic, nomEnq, ctry, data, cheminOut)    }
}
if(ctry=="FR"){
## STATUT D'OCCUPATION DU LOGEMENT
nomIndic <- "strmfr"
nomVar <- "STRM"
if(!nomVar%in%names(subpop)){
data <- prepPVS(nomEnq, prez_long, nomIndic, nomVar, seuil)
createFiles(nomIndic, nomVar, nomEnq, data, prez_long, sfSec, cheminOut)
createISeg(nomIndic, nomVar, nomEnq, ctry, data, sfSec, cheminOut)
createStacked(nomIndic, nomEnq, ctry, data, cheminOut)    }
}
if(ctry=="CA"){
## STATUT D'OCCUPATION DU LOGEMENT
nomIndic <- "strmqc"
nomVar <- "STRM"
if(!nomVar%in%names(subpop)){
data <- prepPVS(nomEnq, prez_long, nomIndic, nomVar, seuil)
createFiles(nomIndic, nomVar, nomEnq, data, prez_long, sfSec, cheminOut)
createISeg(nomIndic, nomVar, nomEnq, ctry, data, sfSec, cheminOut)
createStacked(nomIndic, nomEnq, ctry, data, cheminOut)    }
}
cat("Presences: ", nrow(prez_long))
return(nrow(prez_long))
}
setwd("~/00_MobiQuest/git/mobiliquest/server/src/main/resources/routines")
# dossier d'entrée
cheminIn <- "../../../../../../../data/BD_presence_utile"
# dossier de sortie
cheminOut <- "../../../../../../../data_web/data/"
## Ville
nomEnq = "ALBI"
## requête : changement du périmètre observé, exemple :
perim <- c()
## requête : sous-population avec n filtre, exemple :
# subpop <- list("SEX" = "2", "EDUC" = "4", "STRM" = "1")
subpop <- list("SEX" = "2", "KAGE" = c("1","2"))
subpop <- list("OCC" = c() , "CSPMEN" =  c()  , "QPV" = c() ,
"CSP" = c() , "SEX" =  c(2)  , "ZONAGE" =  c(1,2) , "KAGE" =  c()  ,
"EDUC" =  c(4)  , "EDUCMEN" =  c(3)  , "STRM" =  c())
# load p2m functions
suppressWarnings(source("p2m_fct_mobiQuest.R"))
# une ED
T1<-Sys.time()
p2m(nomEnq, perim, subpop, cheminIn, cheminOut)
T2<-Sys.time()
(Tdiff= difftime(T2, T1))
# load p2m functions
suppressWarnings(source("p2m_fct_mobiQuest.R"))
# une ED
T1<-Sys.time()
p2m(nomEnq, perim, subpop, cheminIn, cheminOut)
T2<-Sys.time()
(Tdiff= difftime(T2, T1))
## requête : sous-population avec n filtre, exemple :
# subpop <- list("SEX" = "2", "EDUC" = "4", "STRM" = "1")
subpop <- list("SEX" = "2", "KAGE" = c("1","2"))
# une ED
T1<-Sys.time()
p2m(nomEnq, perim, subpop, cheminIn, cheminOut)
T2<-Sys.time()
(Tdiff= difftime(T2, T1))
## requête : sous-population avec n filtre, exemple :
# subpop <- list("SEX" = "2", "EDUC" = "4", "STRM" = "1")
subpop <- list("SEX" = "2", "KAGE" = c("1","2"))
# une ED
T1<-Sys.time()
p2m(nomEnq, perim, subpop, cheminIn, cheminOut)
T2<-Sys.time()
(Tdiff= difftime(T2, T1))
version.info()
info.version()
sessionInfo()
## requête : sous-population avec n filtre, exemple :
# subpop <- list("SEX" = "2", "EDUC" = "4", "STRM" = "1")
subpop <- list("SEX" = "2", "KAGE" = c("1","2"))
# load p2m functions
suppressWarnings(source("p2m_fct_mobiQuest.R"))
# une ED
T1<-Sys.time()
p2m(nomEnq, perim, subpop, cheminIn, cheminOut)
T2<-Sys.time()
(Tdiff= difftime(T2, T1))
setwd("~/00_MobiQuest/")
list.files("data/BD_presence_utile/")
# load tables présence
listdf <- list()
for (i in list.files("data/BD_presence_utile/")){
prezTable <- readRDS(paste0("data/BD_presence_utile/", i))
listdf[[i]] <- as.data.frame(prezTable)
rm(prezTable)
}
"data/BD_presence_utile/"
list.files("data/BD_presence_utile/")
list.files("data/BD_presence_utile/")-1
listf <- list.files("data/BD_presence_utile/")
listf <- listf[!listf%in%c("BDgeo")]
for (i in list.files(listf)){
prezTable <- readRDS(paste0(listf, i))
listdf[[i]] <- as.data.frame(prezTable)
rm(prezTable)
}
# load tables présence
listdf <- list()
listf <- list.files("data/BD_presence_utile/")
listf <- listf[!listf%in%c("BDgeo")]
for (i in listf){
prezTable <- readRDS(paste0(listf, i))
listdf[[i]] <- as.data.frame(prezTable)
rm(prezTable)
}
for (i in listf){
prezTable <- readRDS(paste0("data/BD_presence_utile/", i))
listdf[[i]] <- as.data.frame(prezTable)
rm(prezTable)
}
# Compilation
prezTable <- bind_rows(listdf, .id = "nameFile")
library(dplyr)
prezTable <- prezTable %>%
select(-nameFile) %>%
arrange(PAYS, LIB_ED) %>%
relocate(PAYS)
# Compilation
prezTable <- bind_rows(listdf, .id = "nameFile")
prezTable <- prezTable %>%
select(-nameFile) %>%
arrange(PAYS, LIB_ED) %>%
relocate(PAYS)
View(prezTable)
View(prezTable)
# load tables présence
listdf <- list()
listf <- list.files("data/BD_presence_utile/")
list.files("data/BD_presence_utile/")
listf <- c("presence_utile_BOGOTA.RDS", "presence_utile_SANTIAGO.RDS", "presence_utile_SAO PAULO.RDS",
"presence_utile_BESANCON.RDS", "presence_utile_CARCASSONNE.RDS")
for (i in listf){
prezTable <- readRDS(paste0("data/BD_presence_utile/", i))
listdf[[i]] <- as.data.frame(prezTable)
rm(prezTable)
}
# Compilation
prezTable <- bind_rows(listdf, .id = "nameFile")
# nouvelles modalités de ZONAGE
prezTable <- prezTable %>%
mutate(ZONAGE = case_when(PAYS=="AS" ~ ZONAGE+3,
PAYS=="FR" & ZONAGE==2 ~ 3))
library(tidylog)
setwd("~/00_MobiQuest/")
library(tidylog)
library(dplyr)
# load tables présence
listdf <- list()
list.files("data/BD_presence_utile/")
listf <- c("presence_utile_BOGOTA.RDS", "presence_utile_SANTIAGO.RDS", "presence_utile_SAO PAULO.RDS",
"presence_utile_BESANCON.RDS", "presence_utile_CARCASSONNE.RDS")
for (i in listf){
prezTable <- readRDS(paste0("data/BD_presence_utile/", i))
listdf[[i]] <- as.data.frame(prezTable)
rm(prezTable)
}
# Compilation
prezTable <- bind_rows(listdf, .id = "nameFile")
# nouvelles modalités de ZONAGE
prezTable <- prezTable %>%
mutate(ZONAGE = case_when(PAYS=="AS" ~ ZONAGE+3,
PAYS=="FR" & ZONAGE==2 ~ 3))
View(prezTable)
savePrez <- function(enquete){
prez_long <- prezTable %>% filter(ENQUETE == enquete)
if(enquete%in%c("BESANCON", "CARCASSONNE")){
prez_long <- prez_long %>%
select(PAYS, ENQUETE, ID_IND, W_IND,
CODE_ZF, CODE_COM, CODE_SEC,
MOTIF, MODE_ARR, SEX, KAGE,
RES_ZF, RES_SEC, RES_COG, ZONAGE,
EDUC, EDUCMEN, CSP, CSPMEN, OCC,
STRM, QPV, RES, HOUR)
}
if(enquete=="BOGOTA"){
prez_long <- prez_long %>%
select(PAYS, ENQUETE, ID_IND, W_IND,
CODE_ZF, CODE_COM, CODE_SEC,
MOTIF, MODE_ARR, SEX, KAGE,
RES_ZF, RES_SEC, RES_COG, RES_SSE, ZONAGE,
EDUC, EDUCMEN, CSO, REV, OCC, INFORMAL,
STRM, RES, LOG, HOUR)
}
if(enquete=="SANTIAGO"){
prez_long <- prez_long %>%
select(PAYS, ENQUETE, ID_IND, W_IND,
CODE_ZF, CODE_COM, CODE_SEC,
MOTIF, MODE_ARR, SEX, KAGE,
RES_ZF, RES_SEC, RES_COG, ZONAGE,
EDUC, EDUCMEN, CSO, REV, OCC,
STRM, RES, LOG, HOUR)
}
if(enquete=="SAO PAULO"){
prez_long <- prez_long %>%
select(PAYS, ENQUETE, ID_IND, W_IND,
CODE_ZF, CODE_COM, CODE_SEC,
MOTIF, MODE_ARR, SEX, KAGE,
RES_ZF, RES_SEC, RES_COG, ZONAGE,
EDUC, EDUCMEN, CSO, REV, OCC, INFORMAL,
STRM, RES, LOG, HOUR)
}
saveRDS(prez_long, paste0("data/BD_presence_utile/presence_utile_", enquete, "test.RDS"))
}
for (i in unique(prezTable$ENQUETE)) {
savePrez(enquete = i)
}
presence_utile_BESANCONtest <- readRDS("~/00_MobiQuest/data/BD_presence_utile/presence_utile_BESANCONtest.RDS")
presence_utile_BESANCON <- readRDS("~/00_MobiQuest/data/BD_presence_utile/presence_utile_BESANCON.RDS")
install.packages("arsenal")
require(arsenal)
comparedf(presence_utile_BESANCON, presence_utile_BESANCONtest)
c <- comparedf(presence_utile_BESANCON, presence_utile_BESANCONtest)
View(c)
View(presence_utile_BESANCON)
sort(unique(presence_utile_BESANCON$ZONAGE))
sort(unique(presence_utile_BESANCONtest$ZONAGE))
# load tables présence
listdf <- list()
list.files("data/BD_presence_utile/")
listf <- c("presence_utile_BOGOTA.RDS", "presence_utile_SANTIAGO.RDS", "presence_utile_SAO PAULO.RDS",
"presence_utile_BESANCON.RDS", "presence_utile_CARCASSONNE.RDS")
for (i in listf){
prezTable <- readRDS(paste0("data/BD_presence_utile/", i))
listdf[[i]] <- as.data.frame(prezTable)
rm(prezTable)
}
# Compilation
prezTable <- bind_rows(listdf, .id = "nameFile")
# nouvelles modalités de ZONAGE
prezTable <- prezTable %>%
mutate(ZONAGE = case_when(PAYS=="AS" ~ ZONAGE+3,
PAYS=="FR" & ZONAGE==2 ~ 3,
TRUE ~ ZONAGE))
# save
savePrez <- function(enquete){
prez_long <- prezTable %>% filter(ENQUETE == enquete)
if(enquete%in%c("BESANCON", "CARCASSONNE")){
prez_long <- prez_long %>%
select(PAYS, ENQUETE, ID_IND, W_IND,
CODE_ZF, CODE_COM, CODE_SEC,
MOTIF, MODE_ARR, SEX, KAGE,
RES_ZF, RES_SEC, RES_COG, ZONAGE,
EDUC, EDUCMEN, CSP, CSPMEN, OCC,
STRM, QPV, RES, HOUR)
}
if(enquete=="BOGOTA"){
prez_long <- prez_long %>%
select(PAYS, ENQUETE, ID_IND, W_IND,
CODE_ZF, CODE_COM, CODE_SEC,
MOTIF, MODE_ARR, SEX, KAGE,
RES_ZF, RES_SEC, RES_COG, RES_SSE, ZONAGE,
EDUC, EDUCMEN, CSO, REV, OCC, INFORMAL,
STRM, RES, LOG, HOUR)
}
if(enquete=="SANTIAGO"){
prez_long <- prez_long %>%
select(PAYS, ENQUETE, ID_IND, W_IND,
CODE_ZF, CODE_COM, CODE_SEC,
MOTIF, MODE_ARR, SEX, KAGE,
RES_ZF, RES_SEC, RES_COG, ZONAGE,
EDUC, EDUCMEN, CSO, REV, OCC,
STRM, RES, LOG, HOUR)
}
if(enquete=="SAO PAULO"){
prez_long <- prez_long %>%
select(PAYS, ENQUETE, ID_IND, W_IND,
CODE_ZF, CODE_COM, CODE_SEC,
MOTIF, MODE_ARR, SEX, KAGE,
RES_ZF, RES_SEC, RES_COG, ZONAGE,
EDUC, EDUCMEN, CSO, REV, OCC, INFORMAL,
STRM, RES, LOG, HOUR)
}
saveRDS(prez_long, paste0("data/BD_presence_utile/presence_utile_", enquete, "test.RDS"))
}
for (i in unique(prezTable$ENQUETE)) {
savePrez(enquete = i)
}
presence_utile_BESANCONtest <- readRDS("~/00_MobiQuest/data/BD_presence_utile/presence_utile_BESANCONtest.RDS")
c <- comparedf(presence_utile_BESANCON, presence_utile_BESANCONtest)
sort(unique(presence_utile_BESANCON$ZONAGE))
sort(unique(presence_utile_BESANCONtest$ZONAGE))
View(c)
c[["frame.summary"]]
c[["vars.summary"]]
c[["control"]]
`presence_utile_SAO PAULOtest` <- readRDS("~/00_MobiQuest/data/BD_presence_utile/presence_utile_SAO PAULOtest.RDS")
`presence_utile_SAO PAULO` <- readRDS("~/00_MobiQuest/data/BD_presence_utile/presence_utile_SAO PAULO.RDS")
c <- comparedf(`presence_utile_SAO PAULO`, `presence_utile_SAO PAULOtest`)
View(c)
c[["vars.summary"]]
sort(unique(`presence_utile_SAO PAULO$ZONAGE`))
sort(unique(`presence_utile_SAO PAULO`$ZONAGE))
sort(unique(`presence_utile_SAO PAULOtest`$ZONAGE))
setwd("~/00_MobiQuest/")
library(tidylog)
library(dplyr)
# load tables présence
listdf <- list()
list.files("data/BD_presence_utile/")
listf <- c("presence_utile_BOGOTA.RDS", "presence_utile_SANTIAGO.RDS", "presence_utile_SAO PAULO.RDS",
"presence_utile_BESANCON.RDS", "presence_utile_CARCASSONNE.RDS")
for (i in listf){
prezTable <- readRDS(paste0("data/BD_presence_utile/", i))
listdf[[i]] <- as.data.frame(prezTable)
rm(prezTable)
}
# Compilation
prezTable <- bind_rows(listdf, .id = "nameFile")
# nouvelles modalités de ZONAGE
prezTable <- prezTable %>%
mutate(ZONAGE = case_when(PAYS=="AS" ~ ZONAGE+3,
PAYS=="FR" & ZONAGE==2 ~ 3,
TRUE ~ ZONAGE))
# save
savePrez <- function(enquete){
prez_long <- prezTable %>% filter(ENQUETE == enquete)
if(enquete%in%c("BESANCON", "CARCASSONNE")){
prez_long <- prez_long %>%
select(PAYS, ENQUETE, ID_IND, W_IND,
CODE_ZF, CODE_COM, CODE_SEC,
MOTIF, MODE_ARR, SEX, KAGE,
RES_ZF, RES_SEC, RES_COG, ZONAGE,
EDUC, EDUCMEN, CSP, CSPMEN, OCC,
STRM, QPV, RES, HOUR)
}
if(enquete=="BOGOTA"){
prez_long <- prez_long %>%
select(PAYS, ENQUETE, ID_IND, W_IND,
CODE_ZF, CODE_COM, CODE_SEC,
MOTIF, MODE_ARR, SEX, KAGE,
RES_ZF, RES_SEC, RES_COG, RES_SSE, ZONAGE,
EDUC, EDUCMEN, CSO, REV, OCC, INFORMAL,
STRM, RES, LOG, HOUR)
}
if(enquete=="SANTIAGO"){
prez_long <- prez_long %>%
select(PAYS, ENQUETE, ID_IND, W_IND,
CODE_ZF, CODE_COM, CODE_SEC,
MOTIF, MODE_ARR, SEX, KAGE,
RES_ZF, RES_SEC, RES_COG, ZONAGE,
EDUC, EDUCMEN, CSO, REV, OCC,
STRM, RES, LOG, HOUR)
}
if(enquete=="SAO PAULO"){
prez_long <- prez_long %>%
select(PAYS, ENQUETE, ID_IND, W_IND,
CODE_ZF, CODE_COM, CODE_SEC,
MOTIF, MODE_ARR, SEX, KAGE,
RES_ZF, RES_SEC, RES_COG, ZONAGE,
EDUC, EDUCMEN, CSO, REV, OCC, INFORMAL,
STRM, RES, LOG, HOUR)
}
saveRDS(prez_long, paste0("data/BD_presence_utile/presence_utile_", enquete, ".RDS"))
}
for (i in unique(prezTable$ENQUETE)) {
savePrez(enquete = i)
}
library(sf)
# load bd géo
sf <- st_read("data/BD_presence_utile/BDgeo/SEC_59ED_W84.shp")
# recode
sf <- sf %>%
mutate(ZONAGE_SEC = case_when(PAYS=="AS" ~ ZONAGE_SEC+3,
TRUE ~ ZONAGE_SEC))
# recode
sf <- sf %>%
mutate(ZONAGE_SEC = case_when(PAYS=="AS" ~ ZONAGE_SEC+3,
TRUE ~ as.numeric(ZONAGE_SEC)))
View(sf)
sort(unique(sf$ZONAGE_SEC[sf$ENQUETE%in% c("BESANCON", "BOGOTA")]))
sort(unique(sf$ZONAGE_SEC[sf$ENQUETE%in% c("BESANCON", "CARCASSONNE")]))
# save
st_write(sf, "data/BD_presence_utile/BDgeo/SEC_59ED_W84.shp",
delete_dsn = TRUE, layer_options = "ENCODING=UTF-8")
presence_utile_BESANCON <- readRDS("~/00_MobiQuest/data/BD_presence_utile/presence_utile_BESANCON.RDS")
sort(unique(presence_utile_BESANCON$ZONAGE))
setwd("~/00_MobiQuest/git/mobiliquest/server/src/main/resources/routines")
# dossier d'entrée
cheminIn <- "../../../../../../../data/BD_presence_utile"
# dossier de sortie
cheminOut <- "../../../../../../../data_web/data/"
## Ville
nomEnq = "CARCASSONNE"
## requête : changement du périmètre observé, exemple :
perim <- c(1, 3)
## requête : sous-population avec n filtre, exemple :
# subpop <- list("SEX" = "2", "EDUC" = "4", "STRM" = "1")
subpop <- list("SEX" = "2", "KAGE" = c("1","2"))
# load p2m functions
suppressWarnings(source("p2m_fct_mobiQuest.R"))
# une ED
T1<-Sys.time()
p2m(nomEnq, perim, subpop, cheminIn, cheminOut)
T2<-Sys.time()
(Tdiff= difftime(T2, T1))
